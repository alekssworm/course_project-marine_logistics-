# Generated by Django 4.2.4 on 2023-12-03 16:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('company_name', models.CharField(blank=True, max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'custom_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('port_table_id', models.AutoField(primary_key=True, serialize=False)),
                ('port_name', models.TextField()),
                ('port_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('port_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
            ],
            options={
                'db_table': 'port_table',
            },
        ),
        migrations.CreateModel(
            name='Ship',
            fields=[
                ('ship_table_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_of_vessel', models.TextField()),
                ('ship_tonnage', models.PositiveIntegerField()),
                ('ship_type', models.CharField(max_length=100)),
                ('average_speed', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('home_port', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.port')),
            ],
            options={
                'db_table': 'ship_table',
            },
        ),
        migrations.CreateModel(
            name='ShippingCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo_type', models.CharField(max_length=100, unique=True)),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'ShippingCost',
            },
        ),
        migrations.CreateModel(
            name='WritingAContract',
            fields=[
                ('contract_id', models.AutoField(primary_key=True, serialize=False)),
                ('cargo_quantity', models.IntegerField()),
                ('type_of_cargo', models.TextField(blank=True)),
                ('temperature_mode', models.TextField(blank=True)),
                ('in_work', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('customer_addendum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to=settings.AUTH_USER_MODEL)),
                ('port_final_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts_final_destination', to='app.port')),
                ('port_id_with_cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts_with_cargo', to='app.port')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'writing_a_contract',
            },
        ),
        migrations.CreateModel(
            name='ShipRepair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repair_start_date', models.DateField()),
                ('repair_end_date', models.DateField()),
                ('cost_repair', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ship')),
            ],
            options={
                'db_table': 'ship_repair',
            },
        ),
        migrations.CreateModel(
            name='RouteShip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voyage_duration', models.PositiveIntegerField()),
                ('time_to_port', models.DateTimeField()),
                ('order_completed', models.BooleanField(default=False)),
                ('route_key', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('from_the_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_departures', to='app.port')),
                ('ship_table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ship')),
                ('to_the_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_arrivals', to='app.port')),
            ],
            options={
                'db_table': 'route_ship',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_date', models.DateField(default=None, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('payment_made', models.BooleanField(default=False)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='app.writingacontract')),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vessel_load_calculation', models.IntegerField()),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.writingacontract')),
                ('ship_table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ship')),
            ],
        ),
    ]
